/**
 * Example 2
 * non-optimized code
 */
(function() {

  var even = Contract.assert(function (x) {
    return x==0 ? true : odd(x-1);
  }, Contract.AFunction([typeOfNumber], typeOfBoolean));

  var odd = Contract.assert( function (x) {
    return x==0 ? false : even(x-1);
  }, Contract.AFunction([typeOfNumber], typeOfBoolean));

  even(10);

})();

//TreatJS Statistics ........... .........................................................................................
//... #ASSERT =  ...............        2 ................................................................................
//... #ASSERTWITH =  ...........       35 ................................................................................
//... #BASE =  .................       22 ................................................................................
//... #MEMBRANE =  .............      110 ................................................................................
//... #DECOMPILE =  ............        2 ................................................................................
//... #CALLBACK =  .............       88 ................................................................................     

/**
 * Example 2
 * optimized code
 */
(function() {

  function even (x) {
    return x==0 ? true : odd(x-1);
  }
  
  function odd (x) {
    return x==0 ? false : even(x-1);
  }
 
  /* NOTE
   * Static optimizer moves contract to the boundaries.
   */

  var evenC = Contract.assert(even, Contract.AFunction([typeOfNumber], typeOfBoolean));
  var oddC = Contract.assert(odd, Contract.AFunction([typeOfNumber], typeOfBoolean));

  evenC(10);

})();

//TreatJS Statistics ........... .........................................................................................
//... #ASSERT =  ...............        2 ................................................................................
//... #ASSERTWITH =  ...........        5 ................................................................................
//... #BASE =  .................        2 ................................................................................
//... #MEMBRANE =  .............       10 ................................................................................
//... #DECOMPILE =  ............        2 ................................................................................
//... #CALLBACK =  .............        8 ................................................................................
