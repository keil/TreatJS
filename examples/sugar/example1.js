/**
 * Example 1
 * non-optimized code
 */
(function() {

  var fibonacci = Contract.assert(function (n) {
    if (n===0) return 0;
    else if (n===1) return 1;
    else return (fibonacci(n-1) + fibonacci(n-2));
  }, Contract.AFunction([typeOfNumber], typeOfNumber));

  fibonacci(10);

})();

//TreatJS Statistics ........... .........................................................................................
//... #ASSERT =  ...............        1 ................................................................................
//... #ASSERTWITH =  ...........      532 ................................................................................
//... #BASE =  .................      354 ................................................................................
//... #MEMBRANE =  .............     1770 ................................................................................
//... #DECOMPILE =  ............        1 ................................................................................
//... #CALLBACK =  .............     1416 ................................................................................

/**
 * Example 1
 * optimized code
 */
(function() {

  var fibonacci = Contract.assert(function (n) {
    function calculate(n) {
      if (n===0) return 0;
      else if (n===1) return 1;
      else return (calculate(n-1) + calculate(n-2));
    }
    return calculate(n);
  }, Contract.AFunction([typeOfNumber], typeOfNumber));

  /* NOTE
   * Static optimizer moves contract to the boundaries.
   */

  fibonacci(10);

})();

//TreatJS Statistics ........... .........................................................................................
//... #ASSERT =  ...............        1 ................................................................................
//... #ASSERTWITH =  ...........        4 ................................................................................
//... #BASE =  .................        2 ................................................................................
//... #MEMBRANE =  .............       10 ................................................................................
//... #DECOMPILE =  ............        1 ................................................................................
//... #CALLBACK =  .............        8 ................................................................................    
