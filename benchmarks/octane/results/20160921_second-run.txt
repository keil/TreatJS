cd ../ && ./js.transparent -f shell/shell.js -f bootstrap.js -f benchmarks/octane/typedoctane.js -f benchmarks/octane/types/types.js -f benchmarks/octane/typed.js
  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2016, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

load richards.js
load deltablue.js
load crypto.js
load raytrace.js
load earley-boyer.js
load regexp.js
load splay.js
load navier-stokes.js
load pdfjs.js
load mandreel.js
load gbemu-part1.js
load gbemu-part2.js
load code-load.js
load box2d.js
load zlib.js
load zlib-data.js
load typescript.js
load typescript-input.js
load typescript-compiler.js
Richards: 4.58
DeltaBlue: 3.43
Crypto: 30883
RayTrace: 15.9
EarleyBoyer: [[TreatJS/PositiveBlame]]
[[TreatJS/PositiveBlame]] Subject @ (({0:#typeObject, 1:#typeObject, 2:#typeNumber, 3:#typeNumber, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeNumber) - ({0:#typeObject, 1:#typeObject, 2:#typeNumber, 3:#typeNumber, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeUndefined))
RegExp: 3190
Splay: 240
SplayLatency: 589
NavierStokes: [[TreatJS/NegativeBlame]]
[[TreatJS/NegativeBlame]] Context (Global Context) @ ({0:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeUndefined)
PdfJS: [[TreatJS/NegativeBlame]]
[[TreatJS/NegativeBlame]] Context (Global Context) @ ({0:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeUndefined)
Mandreel: [[TreatJS/PositiveBlame]]
[[TreatJS/PositiveBlame]] Subject @ (({0:#typeString, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeUndefined) - ({0:#typeString, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeObject))
Gameboy: [[TreatJS/PositiveBlame]]
[[TreatJS/PositiveBlame]] Subject @ ({0:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeUndefined)
CodeLoad: [[TreatJS/PositiveBlame]]
[[TreatJS/PositiveBlame]] Subject @ ({0:#typeObject, 1:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeObject)
Box2D: [[TreatJS/PositiveBlame]]
[[TreatJS/PositiveBlame]] Subject @ ({0:#typeObject, 1:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeObject)
zlib: 69620
Typescript: [[TreatJS/NegativeBlame]]
[[TreatJS/NegativeBlame]] Context (Global Context) @ ({0:#typeNumber, 1:#typeObject, sc_toWriteOrDisplayString:#Any, sc_toDisplayString:#Any, sc_toWriteString:#Any, sc_toWriteCircleString:#Any} -> #typeObject)
