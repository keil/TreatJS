cd ../ && ./js.transparent -f shell/shell.js -f bootstrap.js -f benchmarks/octane/typedoctane.js -f benchmarks/octane/types/types.deltablue.js -f benchmarks/octane/typed.js -f benchmarks/octane/run.deltablue.js -f benchmarks/octane/run.js
  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2017, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

load deltablue.js
DeltaBlue: 1.49
----
Score (version 9): 1.49
Time: 38985627 ms
----
TreatJS Version ........................................................................................................
...  TreatJS 2.0.4 (Alpha) .............................................................................................
TreatJS Configuration ..................................................................................................
... semantics .. INDY...................................................................................................
... safetylevel  PURE...................................................................................................
... assertion .. true...................................................................................................
... verbose .... false..................................................................................................
... statistic .. true...................................................................................................
... print ...... log....................................................................................................
TreatJS Statistic ......................................................................................................
... #TOPASSERT . 54.....................................................................................................
... #ASSERT .... 2320357672.............................................................................................
... #CONSTRUCT . 0......................................................................................................
... #PREDICATES  1341331212.............................................................................................
... #MEMBRANE .. 1341331220.............................................................................................
... #DECOMPILE . 8......................................................................................................
... #CALLBACK .. 1341331212.............................................................................................
