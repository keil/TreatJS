./js -f src/shell.js -f bootstrap.js -f contracts/contracts.js -f test/default.js -i
  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2015, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

TreatJS Version .............. .........................................................................................
... TreatJS 1.4.0 (PoC) ...... .........................................................................................
TreatJS Configuration ........ .........................................................................................
... :semantics =  ............      LAX ................................................................................
... :assertion =  ............     true ................................................................................
... :membrane =  .............     true ................................................................................
... :decompile =  ............     true ................................................................................
... :canonicalize =  .........     true ................................................................................
... :callback =  .............     true ................................................................................
... :predicate =  ............     true ................................................................................
... :debug =  ................    false ................................................................................
... :maxArgs =  ..............        8 ................................................................................
... :newGlobal =  ............    false ................................................................................
... :nativePassThrough =  ....     true ................................................................................
... :contractPassThrough =  ..     true ................................................................................
... :quitOnError =  ..........    false ................................................................................
... :stackTrace =  ...........     true ................................................................................
... :exceptionPassThrough =  .     true ................................................................................
TreatJS Verbose Mode ......... .........................................................................................
... :sandbox =  ..............    false ................................................................................
... :assert =  ...............    false ................................................................................
... :internal =  .............     true ................................................................................
... :statistic =  ............     true ................................................................................

***  Test 0 / Baseline
Time (ms): 2
Predicates: 0

***  Test 1 / Normal
Time (ms): 39722
Predicates: 300000

***  Test 1 / Baseline
Time (ms): 27100
Predicates: 200000

***  Test 1 / Subset
Time (ms): 26827
Predicates: 200000

***  Test 2 / Normal
Time (ms): 88184
Predicates: 600000

***  Test 2 / Baseline
Time (ms): 58868
Predicates: 400000

***  Test 2 / Subset
Time (ms): 46205
Predicates: 300000

***  Test 3 / Normal
Time (ms): 67706
Predicates: 500000

***  Test 3 / Baseline
Time (ms): 55785
Predicates: 400000

***  Test 3 / Subset
Time (ms): 27527
Predicates: 200000

***  Test 4 / Normal
Time (ms): 115639
Predicates: 800000

***  Test 4 / Baseline
Time (ms): 85625
Predicates: 600000

***  Test 4 / Subset
Time (ms): 44146
Predicates: 300000

***  Test 5 / Normal
Time (ms): 149710
Predicates: 1000000

***  Test 5 / Baseline
Time (ms): 108659
Predicates: 800000

***  Test 5 / Subset
Time (ms): 59906
Predicates: 500000

***  Test 6 / Normal
Time (ms): 303733
Predicates: 1700000

***  Test 6 / Baseline
Time (ms): 205133
Predicates: 1200000

***  Test 6 / Subset
Time (ms): 123419
Predicates: 700000
