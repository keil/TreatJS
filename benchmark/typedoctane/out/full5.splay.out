  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2015, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2015, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2015, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

  _____             _      _ ___ 
 |_   _| _ ___ __ _| |_ _ | / __|
   | || '_/ -_) _` |  _| || \__ \
   |_||_| \___\__,_|\__|\__/|___/
                                 
 * TreatJS: Higher-Order Contracts for JavaScript
 * http://proglang.informatik.uni-freiburg.de/treatjs/

 * Copyright (c) 2013-2015, Proglang, University of Freiburg.
 * http://proglang.informatik.uni-freiburg.de/
 * All rights reserved.

 * Author Matthias Keil
 * http://www.informatik.uni-freiburg.de/~keilr/

load splay.js
@ASSERT ((|[]|)->[typeOfBoolean])
@ASSERT ((|[ 0:[typeOfNumber] 1:[typeOfObject]]|)->[typeOfUndefined])
@ASSERT ((|[ 0:[typeOfNumber]]|)->[typeOfObject])
@ASSERT ((|[ 0:[typeOfNumber]]|)->[typeOfObject])
@ASSERT ((|[ 0:[typeOfObject]]|)->[typeOfObject])
@ASSERT ((|[ 0:[typeOfNumber]]|)->[typeOfObject])
@ASSERT ((|[]|)->[typeOfObject])
@ASSERT ((|[ 0:[typeOfNumber]]|)->[typeOfUndefined])
@ASSERT ((|[ 0:[typeOfFunction]]|)->[typeOfUndefined])
@ASSERT ((|[ 0:[typeOfObject]]|)->[typeOfUndefined])
Splay: 19.0
SplayLatency: 67.5
----
Score (version 9): 35.9
TreatJS Version .............. .........................................................................................
... TreatJS 1.2.17 (PoC) ......... .....................................................................................
TreatJS Configuration ........ .........................................................................................
... :assertion =  ................     true ............................................................................
... :membrane =  .................     true ............................................................................
... :decompile =  ................     true ............................................................................
... :canonicalize =  .............     true ............................................................................
... :newGlobal =  ................    false ............................................................................
... :nativePassThrough =  ........     true ............................................................................
... :contractPassThrough =  ......     true ............................................................................
... :quitOnError =  ..............    false ............................................................................
... :stackTrace =  ...............     true ............................................................................
TreatJS Verbose Mode ......... .........................................................................................
TreatJS Statistics ........... .........................................................................................
... #ASSERT =  ...................       10 ............................................................................
... #ASSERTWITH =  ............... 11620663 ............................................................................
... #BASE =  .....................  7067593 ............................................................................
... #MEMBRANE =  ................. 35337965 ............................................................................
... #DECOMPILE =  ................        5 ............................................................................
... #CALLBACK =  ................. 14135186 ............................................................................
